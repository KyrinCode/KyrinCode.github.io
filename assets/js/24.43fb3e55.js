(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{604:function(v,_,n){"use strict";n.r(_);var t=n(4),p=Object(t.a)({},(function(){var v=this,_=v.$createElement,n=v._self._c||_;return n("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[n("p",[v._v("介绍比特币隔离见证解决的延展性攻击问题")]),v._v(" "),n("p",[v._v("延展性是说一个东西可以改变它的形状，而不改变质量，比如金属，你把拉捏捶打怎么样都行，但它质量不改变。")]),v._v(" "),n("p",[v._v("具体到比特币来说，它的延展性是指比特币交易的延展性。每一笔比特币交易都有一个交易ID，这个交易ID呢，其实就是整笔比特币交易的哈希值。我们知道，原始数据稍微变动，哈希值就面目全非，在老式的比特币交易里，数字签名跟交易的其他信息放在一起，是原始值的一部分。所以，数字签名稍一变动，交易ID就完全不同了。但关键是，数字签名真的可以变，这个变不是指变了之后无效的乱变，而是变了之后仍然有效的变！")]),v._v(" "),n("p",[v._v("为什么会这样呢？")]),v._v(" "),n("p",[v._v("因为数字签名本质上是一种数学运算，但凡数学运算，总有一些不同但等价的表现形式，比如数字13和0013，在数学上就是一样的。所以，同一个数字签名可能有多种表现形式，但都是有效的。")]),v._v(" "),n("p",[v._v("问题来了。")]),v._v(" "),n("p",[v._v("虽然同一数字签名的不同表现形式都有效，但他们的哈希值却完全不同啊，所以最后生成的交易ID也会不同。利用这一点，延展性攻击得以展开。")]),v._v(" "),n("p",[v._v("假如你发起一笔交易，转了一笔比特币给小明，数字签名用的是A形式，生成的交易ID是A，然后你把交易ID告诉了小明。现在有个坏人，侦听到了这笔交易，把数字签名改成了B形式，然后生成交易ID为B，而且他的网速比你快，最终他的B交易被区块打包，你的比特币照常还是转给了小明，小明虽然收到了比特币，但不是根据A交易收到的，而且在区块链上也查不到A交易。所以，小明完全可以说没有收到你转发的比特币，然后要你重新转一次。这便是延展性攻击。")]),v._v(" "),n("p",[v._v("之前世界上最大的交易所门头沟破产，号称就是因为受到了黑客的延展性攻击而导致。\n我们来看看如何用延展性来攻击一家交易所。")]),v._v(" "),n("p",[v._v("1、查清楚交易所主要和哪些比特币节点直连；\n2、用DDOS攻击把那些节点搞瘫痪；\n3、伪造一些节点和交易所连接；\n4、向交易所提币；\n5、交易所向你发币后，截停这些交易，然后改变签名方式和交易ID，再广播出去；\n6、你照样收到币了，但向交易所反映说你没收到；\n7、交易所根据交易ID一查，果然查不到，于是再向你转一笔。")]),v._v(" "),n("p",[v._v("当然，现在交易所都对延展性攻击有所防范，要得手几乎不可能，交易所的防范手段其实很简单，复查的时候如果根据交易ID查不到，再根据交易的输入查，因为输入是没变的。")]),v._v(" "),n("p",[v._v("隔离见证因为将数字签名隔离出去了，所以就不会有延展性攻击这回事，它是解决延展性攻击的好办法。当然，应该不是唯一办法。据说从比特币分叉出来的BCH也开始用不同的办法来解决延展性攻击，但不知详情，不知现在进展如何。")]),v._v(" "),n("p",[v._v("另外，隔离见证对数字签名的算法做了改进，在之前，对于某些交易来说，数字签名随交易长度是呈平方增长的，但改进之后，可以做到只是线性增长，无疑这又节省了不少空间。")])])}),[],!1,null,null,null);_.default=p.exports}}]);