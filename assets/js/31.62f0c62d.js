(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{590:function(a,s,t){"use strict";t.r(s);var n=t(4),e=Object(n.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("介绍很好用的 Python 人脸识别库 face_recognition")]),a._v(" "),t("p",[a._v("在做一个好玩的 "),t("a",{attrs:{href:"https://github.com/KyrinCode/face_mark_v2",target:"_blank",rel:"noopener noreferrer"}},[a._v("颜值检测网站"),t("OutboundLink")],1),a._v(" 时用到了这个库，在此做一下记录。")]),a._v(" "),t("h2",{attrs:{id:"face-recognition"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#face-recognition"}},[a._v("#")]),a._v(" face_recognition")]),a._v(" "),t("p",[a._v("官方说明："),t("a",{attrs:{href:"https://face-recognition.readthedocs.io/en/latest/index.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://face-recognition.readthedocs.io/en/latest/index.html"),t("OutboundLink")],1)]),a._v(" "),t("p",[a._v("face_recognition 用 dlib 最新的基于深度学习的人脸识别，是最简单的人脸识别库，可以通过 Python 和 命令行识别和处理人脸。模型在 "),t("a",{attrs:{href:"http://vis-www.cs.umass.edu/lfw/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Labeled Faces in the Wild"),t("OutboundLink")],1),a._v(" 基准有99.38%的准确率。")]),a._v(" "),t("h3",{attrs:{id:"安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[a._v("#")]),a._v(" 安装")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("pip "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" face_recognition\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h2",{attrs:{id:"api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[a._v("#")]),a._v(" API")]),a._v(" "),t("p",[a._v("目前只用到过两个方法，但库远比这能做的多，具体的函数及详细参数等请查阅官网。")]),a._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" face_recognition "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("as")]),a._v(" fr\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Load image")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Returns: image contents as numpy array")]),a._v("\nimage "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" fr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("load_image_file"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"img.jpg"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Find all the faces in the image")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Returns: A list of tuples of found face locations in css (top, right, bottom, left) order")]),a._v("\nface_locations "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" fr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("face_locations"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("image"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Find the facial features in the image")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Returns: A list of dicts of face feature locations (eyes, nose, etc)")]),a._v("\nface_landmarks_list "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" fr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("face_landmarks"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("image"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Get face encodings for each face in the image:")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Returns: A list of 128-dimensional face encodings (one for each face in the image)")]),a._v("\nlist_of_face_encodings "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" fr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("face_encodings"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("image"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Compare a list of face encodings against a candidate encoding to see if they match")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Returns: A list of True/False values indicating which known_face_encodings match the face encoding to check")]),a._v("\nresults "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" fr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("compare_faces"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("known_face_encodings"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" a_single_unknown_face_encoding"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br"),t("span",{staticClass:"line-number"},[a._v("12")]),t("br"),t("span",{staticClass:"line-number"},[a._v("13")]),t("br"),t("span",{staticClass:"line-number"},[a._v("14")]),t("br"),t("span",{staticClass:"line-number"},[a._v("15")]),t("br"),t("span",{staticClass:"line-number"},[a._v("16")]),t("br"),t("span",{staticClass:"line-number"},[a._v("17")]),t("br"),t("span",{staticClass:"line-number"},[a._v("18")]),t("br"),t("span",{staticClass:"line-number"},[a._v("19")]),t("br"),t("span",{staticClass:"line-number"},[a._v("20")]),t("br"),t("span",{staticClass:"line-number"},[a._v("21")]),t("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);